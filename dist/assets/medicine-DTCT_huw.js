import{D as d,r as s,E as i}from"./index-DzRK8a2J.js";const R=d("medicine",()=>{const t=s([]),a=s([]);return{reminders:t,activeReminders:a,addReminder:async r=>{try{if(!r.medicineName||!r.dosage||!r.frequency)throw new Error("请填写完整信息");const e={...r,nextRemindTime:new Date().toISOString(),status:"ACTIVE"};console.log("添加用药提醒:",e);const n=await i.post("/api/medicine/reminder",e);return t.value.unshift(n),!0}catch(e){return console.error("添加用药提醒失败:",e),!1}},getReminders:async r=>{try{const e=await i.get(`/api/medicine/reminder/${r}`);return t.value=e,!0}catch{return!1}},getActiveReminders:async r=>{try{const e=await i.get(`/api/medicine/reminder/active/${r}`);return a.value=e,!0}catch{return!1}},updateReminder:async(r,e)=>{try{await i.put(`/api/medicine/reminder/${r}`,e);const n=t.value.findIndex(c=>c.reminderId===r);return n!==-1&&(t.value[n]={...t.value[n],...e}),!0}catch{return!1}},deleteReminder:async r=>{try{return await i.delete(`/api/medicine/reminder/${r}`),t.value=t.value.filter(e=>e.reminderId!==r),!0}catch{return!1}}}});export{R as u};
